generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model driver_reg_details {
  id                String    @id @unique @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at        DateTime? @default(now()) @db.Timestamptz(6)
  full_name         String
  dob               DateTime  @db.Date
  age               Int       @db.SmallInt
  experience        Int
  license_photo_url String    @unique
  driver_photo_url  String    @unique
  user_id           String    @db.Uuid
  Users             users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model partner_business_details {
  id                      String    @id @unique @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at              DateTime? @default(now()) @db.Timestamptz(6)
  business_name           String
  business_id             String?   @unique
  business_address        String
  business_start_date     DateTime? @db.Date
  business_mobile         String
  user_id                 String    @unique @db.Uuid
  trade_licence_photo_url String    @unique
  Users                   users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model partner_reg_details {
  id                  String    @id @unique @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at          DateTime? @default(now()) @db.Timestamptz(6)
  full_name           String
  mothers_name        String
  fathers_name        String
  dob                 DateTime  @db.Date
  age                 Int       @db.SmallInt
  country             String?
  present_address     String
  house_number        Int?
  road_number         Int?
  permanent_address   String?
  nid_number          String?   @unique
  bank_name           String?
  bank_branch         String?
  bank_account_number String?
  bkash_number        String?   @unique
  nagad_number        String?   @unique
  mothers_name_bangla String?
  fathers_name_bangla String?
  user_id             String    @unique @db.Uuid
  nid_front_photo_url String?   @unique
  nid_back_photo_url  String?   @unique
  other_id_number     String?   @unique
  selfie_photo_url    String?   @unique
  otherDocType        String?
  other_id_photo_url  String?   @unique
  Users               users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model account_details {
  id               String    @id @unique @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at       DateTime? @default(now()) @db.Timestamptz(6)
  mobile           String    @unique
  email            String?   @unique
  dob              DateTime? @db.Date
  present_address  String?
  country          String?
  photo_url        String?   @unique
  form_completed   Boolean   @default(false)
  account_verified Boolean   @default(false)
  user_id          String    @unique @db.Uuid
  users            users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model users {
  id                        String                      @id(map: "user_pkey") @unique @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at                DateTime?                   @default(now()) @db.Timestamptz(6)
  full_name                 String?
  type                      String?
  account_details           account_details?
  driver_reg_details        driver_reg_details[]
  partner_business_details  partner_business_details?
  partner_reg_details       partner_reg_details?
  partner_vehicle_documents partner_vehicle_documents[]
  vehicle_reg_details       vehicle_reg_details[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model vehicle_reg_details {
  id                         String                     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at                 DateTime                   @default(now()) @db.Timestamptz(6)
  vehicle_type               String
  vehicle_brand              String
  vehicle_number_plate       String
  year                       Int                        @db.SmallInt
  color                      String
  number_of_seats            Int                        @db.SmallInt
  engine_type                String
  mileage                    Int
  condition                  String
  vehicle_front_photo_url    String                     @unique
  vehicle_back_photo_url     String                     @unique
  vehicle_left_photo_url     String                     @unique
  vehicle_right_photo_url    String                     @unique
  vehicle_interior_photo_url String                     @unique
  user_id                    String                     @db.Uuid
  vehicle_model              String
  partner_vehicle_documents  partner_vehicle_documents?
  vehicle_documents          vehicle_documents?
  users                      users                      @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model otp {
  id         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  otp_code   String?
  mobile     String    @unique
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model partner_vehicle_documents {
  id                      String               @id(map: "partner_vehicle_documents_pkey1") @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at              DateTime?            @default(now()) @db.Timestamptz(6)
  bluebook_photo_url      String?              @unique(map: "partner_vehicle_documents_bluebook_photo_url_key1")
  tax_token_photo_url     String?              @unique(map: "partner_vehicle_documents_tax_token_photo_url_key1")
  fitness_token_photo_url String?              @unique(map: "partner_vehicle_documents_fitness_token_photo_url_key1")
  insurance_photo_url     String?              @unique(map: "partner_vehicle_documents_insurance_photo_url_key1")
  user_id                 String?              @db.Uuid
  vehicle_id              String?              @unique @db.Uuid
  users                   users?               @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  vehicle_reg_details     vehicle_reg_details? @relation(fields: [vehicle_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model vehicle_documents {
  id                              String               @id @db.Uuid
  created_at                      DateTime?            @default(now()) @db.Timestamptz(6)
  vehicle_bluebook_photo_url      String?              @unique
  vehicle_tax_token_photo_url     String?              @unique
  vehicle_fitness_token_photo_url String?              @unique
  vehicle_insurance_photo_url     String?              @unique
  vehicle_id                      String?              @unique @db.Uuid
  vehicle_reg_details             vehicle_reg_details? @relation(fields: [vehicle_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}
